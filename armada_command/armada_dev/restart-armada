#!/usr/bin/env bash

THIS_SCRIPT_PATH=$(readlink -f "${BASH_SOURCE[0]}")
ARMADA_REPO_PATH="$(readlink -f "$(dirname "$THIS_SCRIPT_PATH")/../../")"

docker rm -f $(docker ps | grep -e "->8300" | awk '{print $1}')

LINK_TARGET="/opt/armada-src"
if [[ ! -L "$LINK_TARGET" && -d "$LINK_TARGET" ]]; then
    sudo rmdir --ignore-fail-on-non-empty "$LINK_TARGET" 2> /dev/null
fi
if [[ -L "$LINK_TARGET" ]]; then
    sudo rm "$LINK_TARGET"
fi
if [[ ! -e "$LINK_TARGET" ]]; then
    sudo ln -s "$ARMADA_REPO_PATH" "$LINK_TARGET"
fi

sudo ln -sf "${ARMADA_REPO_PATH}/armada_command/armada_dev/build-armada" /usr/local/bin/build-armada
sudo ln -sf "${ARMADA_REPO_PATH}/armada_command/armada_dev/restart-armada" /usr/local/bin/restart-armada
sudo cp "${ARMADA_REPO_PATH}/armada_command/docker_utils/compatibility.py" /opt/armada/docker_compatibility.py

sudo cp "${ARMADA_REPO_PATH}/packaging/bash_completion.d/armada" /etc/bash_completion.d/armada
source /etc/bash_completion.d/armada

sudo cp "${ARMADA_REPO_PATH}/packaging/systemd/armada.service" /etc/systemd/system/armada.service
sudo systemctl daemon-reload

sudo ARMADA_AUTORELOAD=1 "$ARMADA_REPO_PATH/packaging/bin/armada-runner" restart
